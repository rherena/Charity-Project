substring(x, 3, 3) #Index and n chars index
Amtcode <- ddply(tDAMT, .(Amtcode), summarize,  DAMT=mean(DAMT))
m <-ggplot(Amtcode, aes(Amtcode, DAMT)) + geom_col(aes(fill=Amtcode)) +
geom_hline(yintercept = mean(tDAMT$DAMT))
tDAMT$Amtcode <- substring(tDAMT$RFA_96, 3, 3) #Index and n chars
train$Amtcode <- substring(train$RFA_96, 3, 3)
Amtcode <- ddply(tDAMT, .(Amtcode), summarize,  DAMT=mean(DAMT))
m <-ggplot(Amtcode, aes(Amtcode, DAMT)) + geom_col(aes(fill=Amtcode)) +
geom_hline(yintercept = mean(tDAMT$DAMT))
grid.arrange(q,r,m, nrow=2, ncol=2)
tDAMT$Recency <- substring(tDAMT$RFA_96, 1, 1) #Index and n chars
train$Recency <- substring(train$RFA_96, 1, 1)
tDAMT$Freq <- substring(tDAMT$RFA_96, 2, 2) #Index and n chars
train$Freq <- substring(train$RFA_96, 2, 2)
tDAMT$Amtcode <- substring(tDAMT$RFA_96, 3, 3) #Index and n chars
train$Amtcode <- substring(train$RFA_96, 3, 3)
Recency <- ddply(tDAMT, .(Recency), summarize,  DAMT=mean(DAMT))
q <-ggplot(Recency, aes(Recency, DAMT)) + geom_col(aes(fill=Recency)) + geom_hline(yintercept = mean(tDAMT$DAMT))
Freq <- ddply(tDAMT, .(Freq), summarize,  DAMT=mean(DAMT))
r <-ggplot(Freq, aes(Freq, DAMT)) + geom_col(aes(fill=Freq)) + geom_hline(yintercept = mean(tDAMT$DAMT))
Amtcode <- ddply(tDAMT, .(Amtcode), summarize,  DAMT=mean(DAMT))
m <-ggplot(Amtcode, aes(Amtcode, DAMT)) + geom_col(aes(fill=Amtcode)) +        geom_hline(yintercept = mean(tDAMT$DAMT))
grid.arrange(q,r,m, nrow=2, ncol=2)
summary(tDAMT$Amtcode)
tDAMT$Recency <- as.factor(substring(tDAMT$RFA_96, 1, 1)) #Index and n chars
train$Recency <- as.factor(substring(train$RFA_96, 1, 1))
tDAMT$Freq <- as.factor(substring(tDAMT$RFA_96, 2, 2)) #Index and n chars
train$Freq <- as.factor(substring(train$RFA_96, 2, 2))
tDAMT$Amtcode <- as.factor(substring(tDAMT$RFA_96, 3, 3)) #Index and n chars
train$Amtcode <- as.factor(substring(train$RFA_96, 3, 3))
Recency <- ddply(tDAMT, .(Recency), summarize,  DAMT=mean(DAMT))
q <-ggplot(Recency, aes(Recency, DAMT)) + geom_col(aes(fill=Recency)) + geom_hline(yintercept = mean(tDAMT$DAMT))
Freq <- ddply(tDAMT, .(Freq), summarize,  DAMT=mean(DAMT))
r <-ggplot(Freq, aes(Freq, DAMT)) + geom_col(aes(fill=Freq)) + geom_hline(yintercept = mean(tDAMT$DAMT))
Amtcode <- ddply(tDAMT, .(Amtcode), summarize,  DAMT=mean(DAMT))
m <-ggplot(Amtcode, aes(Amtcode, DAMT)) + geom_col(aes(fill=Amtcode)) +        geom_hline(yintercept = mean(tDAMT$DAMT))
grid.arrange(q,r,m, nrow=2, ncol=2)
Summary(tDAMT$Amtcode)
summary(tDAMT$Amtcode)
tDAMT$Recency <- as.factor(substring(tDAMT$RFA_96, 1, 1)) #Index and n chars
train$Recency <- as.factor(substring(train$RFA_96, 1, 1))
tDAMT$Freq <- as.factor(substring(tDAMT$RFA_96, 2, 2)) #Index and n chars
train$Freq <- as.factor(substring(train$RFA_96, 2, 2))
tDAMT$Amtcode <- as.factor(substring(tDAMT$RFA_96, 3, 3)) #Index and n chars
train$Amtcode <- as.factor(substring(train$RFA_96, 3, 3))
summary(tDAMT$Amtcode)
Recency <- ddply(tDAMT, .(Recency), summarize,  DAMT=mean(DAMT))
q <-ggplot(Recency, aes(Recency, DAMT)) + geom_col(aes(fill=Recency)) + geom_hline(yintercept = mean(tDAMT$DAMT))
Freq <- ddply(tDAMT, .(Freq), summarize,  DAMT=mean(DAMT))
r <-ggplot(Freq, aes(Freq, DAMT)) + geom_col(aes(fill=Freq)) + geom_hline(yintercept = mean(tDAMT$DAMT))
Amtcode <- ddply(tDAMT, .(Amtcode), summarize,  DAMT=mean(DAMT))
m <-ggplot(Amtcode, aes(Amtcode, DAMT)) + geom_col(aes(fill=Amtcode)) +        geom_hline(yintercept = mean(tDAMT$DAMT))
grid.arrange(q,r,m, nrow=2, ncol=2)
Amtcode <- ddply(tDAMT, .(Amtcode), summarize,  DAMT=mean(DAMT))
target <- c("A", "B", "C", "D","E","F","G")
Amtcode <- Amtcode[match(target, Amtcode$Amtcode),]
Amtcode
tDAMT$Recency <- as.factor(substring(tDAMT$RFA_96, 1, 1)) #Index and n chars
train$Recency <- as.factor(substring(train$RFA_96, 1, 1))
tDAMT$Freq <- as.factor(substring(tDAMT$RFA_96, 2, 2)) #Index and n chars
train$Freq <- as.factor(substring(train$RFA_96, 2, 2))
tDAMT$Amtcode <- as.factor(substring(tDAMT$RFA_96, 3, 3)) #Index and n chars
train$Amtcode <- as.factor(substring(train$RFA_96, 3, 3))
summary(tDAMT$Amtcode)
Recency <- ddply(tDAMT, .(Recency), summarize,  DAMT=mean(DAMT))
q <-ggplot(Recency, aes(Recency, DAMT)) + geom_col(aes(fill=Recency)) + geom_hline(yintercept = mean(tDAMT$DAMT))
Freq <- ddply(tDAMT, .(Freq), summarize,  DAMT=mean(DAMT))
r <-ggplot(Freq, aes(Freq, DAMT)) + geom_col(aes(fill=Freq)) + geom_hline(yintercept = mean(tDAMT$DAMT))
Amtcode <- ddply(tDAMT, .(Amtcode), summarize,  DAMT=mean(DAMT))
target <- c("A", "B", "C", "D","E","F","G")
Amtcode <- Amtcode[match(target, Amtcode$Amtcode),]
m <-ggplot(Amtcode, aes(Amtcode, DAMT)) + geom_col(aes(fill=Amtcode)) +        geom_hline(yintercept = mean(tDAMT$DAMT))
grid.arrange(q,r,m, nrow=2, ncol=2)
tDAMT$Recency <- as.factor(substring(tDAMT$RFA_96, 1, 1)) #Index and n chars
train$Recency <- as.factor(substring(train$RFA_96, 1, 1))
tDAMT$Freq <- as.factor(substring(tDAMT$RFA_96, 2, 2)) #Index and n chars
train$Freq <- as.factor(substring(train$RFA_96, 2, 2))
tDAMT$Amtcode <- as.factor(substring(tDAMT$RFA_96, 3, 3)) #Index and n chars
train$Amtcode <- as.factor(substring(train$RFA_96, 3, 3))
Recency <- ddply(tDAMT, .(Recency), summarize,  DAMT=mean(DAMT))
q <-ggplot(Recency, aes(Recency, DAMT)) + geom_col(aes(fill=Recency)) + geom_hline(yintercept = mean(tDAMT$DAMT))
Freq <- ddply(tDAMT, .(Freq), summarize,  DAMT=mean(DAMT))
r <-ggplot(Freq, aes(Freq, DAMT)) + geom_col(aes(fill=Freq)) + geom_hline(yintercept = mean(tDAMT$DAMT))
Amtcode <- ddply(tDAMT, .(Amtcode), summarize,  DAMT=mean(DAMT))
target <- c("A", "B", "C", "D","E","F","G")
Amtcode <- Amtcode[match(target, Amtcode$Amtcode),]
m <-ggplot(Amtcode, aes(Amtcode, DAMT)) + geom_col(aes(fill=Amtcode)) +        geom_hline(yintercept = mean(tDAMT$DAMT))
grid.arrange(q,r,m, nrow=2, ncol=2)
tDAMT$Recency <- as.factor(substring(tDAMT$RFA_96, 1, 1)) #Index and n chars
train$Recency <- as.factor(substring(train$RFA_96, 1, 1))
tDAMT$Freq <- as.factor(substring(tDAMT$RFA_96, 2, 2)) #Index and n chars
train$Freq <- as.factor(substring(train$RFA_96, 2, 2))
tDAMT$Amtcode <- as.factor(substring(tDAMT$RFA_96, 3, 3)) #Index and n chars
train$Amtcode <- as.factor(substring(train$RFA_96, 3, 3))
Recency <- ddply(tDAMT, .(Recency), summarize,  DAMT=mean(DAMT))
q <-ggplot(Recency, aes(Recency, DAMT)) + geom_col(aes(fill=Recency)) + geom_hline(yintercept = mean(tDAMT$DAMT))
Freq <- ddply(tDAMT, .(Freq), summarize,  DAMT=mean(DAMT))
r <-ggplot(Freq, aes(Freq, DAMT)) + geom_col(aes(fill=Freq)) + geom_hline(yintercept = mean(tDAMT$DAMT))
Amtcode <- ddply(tDAMT, .(Amtcode), summarize,  DAMT=mean(DAMT))
target <- c("B", "C", "D","E","F","G")
Amtcode <- Amtcode[match(target, Amtcode$Amtcode),]
m <-ggplot(Amtcode, aes(Amtcode, DAMT)) + geom_col(aes(fill=Amtcode)) +        geom_hline(yintercept = mean(tDAMT$DAMT))
grid.arrange(q,r,m, nrow=2, ncol=2)
agemeans <- ddply(train, .(AGE), summarize,  DONR=mean(DONR))
train <- read.csv('trainSample.csv', stringsAsFactors = TRUE, na.strings=c("NA"," "))
na_count <-sapply(train, function(y) sum(is.na(y)))
na_count <- data.frame(na_count)
train$HOME = as.factor(train$HOME)
train$HINC = as.factor(train$HINC)
summary(train)
sapply(train, class)
na_count
agemeans <- ddply(train, .(AGE), summarize,  DONR=mean(DONR))
agemeans
p <- ggplot(agemeans, aes(AGE, DONR)) + geom_col(aes(fill = AGE))+        geom_hline(yintercept = mean(train$DONR))
p
agemeans <- ddply(train, .(AGE), summarize,  DONR=mean(DONR))
homemeans <- ddply(train, .(HOME), summarize,  DONR=mean(DONR))
imeans <- ddply(train, .(HINC), summarize,  DONR=mean(DONR))
genmeans <- ddply(train, .(GENDER), summarize,  DONR=mean(DONR))
p <- ggplot(agemeans, aes(AGE, DONR)) + geom_col(aes(fill = AGE))+
geom_hline(yintercept = mean(train$DONR))
l <- ggplot(homemeans, aes(HOME, DONR)) + geom_col(aes(fill = HOME))+
geom_hline(yintercept = mean(train$DONR))
n <- ggplot(imeans, aes(HINC, DONR)) + geom_col(aes(fill = HINC))+
geom_hline(yintercept = mean(train$DONR))
m <- ggplot(genmeans[2:6,], aes(GENDER, DONR)) + geom_col(aes(fill = GENDER))+
geom_hline(yintercept = mean(train$DONR))
grid.arrange(p,l,n,m, nrow=2, ncol=2)
knitr::opts_chunk$set(echo = FALSE)
setwd("~/Documents/Machine Learning Pred 422/Charity Project")
library(gridExtra)
library(ggplot2)
library(reshape2)
library(plyr)
train <- read.csv('trainSample.csv', stringsAsFactors = TRUE, na.strings=c("NA"," "))
na_count <-sapply(train, function(y) sum(is.na(y)))
na_count <- data.frame(na_count)
train$HOME = as.factor(train$HOME)
train$HINC = as.factor(train$HINC)
summary(train)
sapply(train, class)
na_count
par(mfrow=c(1,1))
summary(train$DONR)
summary(train$DAMT[train$DAMT > 0])
counts <- table(train$DONR)
barplot(counts, main="", horiz=TRUE,
names.arg=c("Donation > 0", "No Response"), col = "red")
par(mfrow=c(1,2))
hist(train$DAMT[train$DAMT > 0],breaks = 20, col = "blue",
main = "Donation Amounts > 0", xlab = "Donation")
hist(train$DAMT,breaks = 20, col = "blue",
main = "Donation Amounts Incl 0", xlab = "Donation")
c <- train[train$DAMT > 0,c(3:4,8:19)]
cor(c, use="p")[1,]
qplot(x=Var1, y=Var2, data=melt(cor(c, use="p")), fill=value, geom="tile") + scale_fill_gradient2(limits=c(-1, 1)) + theme(text = element_text(size=8),
axis.text.x = element_text(angle=60, hjust=1))
tDAMT <- train[train$DAMT > 0,]
agemeans <- ddply(tDAMT, .(AGE), summarize,  DAMT=mean(DAMT))
homemeans <- ddply(tDAMT, .(HOME), summarize,  DAMT=mean(DAMT))
imeans <- ddply(tDAMT, .(HINC), summarize,  DAMT=mean(DAMT))
genmeans <- ddply(tDAMT, .(GENDER), summarize,  DAMT=mean(DAMT))
p <- ggplot(agemeans, aes(AGE, DAMT)) + geom_col(aes(fill = AGE))
l <- ggplot(homemeans, aes(HOME, DAMT)) + geom_col(aes(fill = HOME))
n <- ggplot(imeans, aes(HINC, DAMT)) + geom_col(aes(fill = HINC))
m <- ggplot(genmeans[2:6,], aes(GENDER, DAMT)) + geom_col(aes(fill = GENDER))
grid.arrange(p,l,n,m, nrow=2, ncol=2)
#Bucketing MEDAGE to 8 buckets
v <- c(seq(min(tDAMT$MEDAGE), max(tDAMT$MEDAGE), max(tDAMT$MEDAGE)/7))
tDAMT$MEDAGE_b = findInterval(tDAMT$MEDAGE,v)
agemeans <- ddply(tDAMT, .(MEDAGE_b), summarize,  DAMT=mean(DAMT))
#Bucketing MEDhval to 10 buckets
v <- c(seq(min(tDAMT$MEDHVAL), max(tDAMT$MEDHVAL), max(tDAMT$MEDHVAL)/10))
tDAMT$MEDHVAL_b = findInterval(tDAMT$MEDHVAL,v)
medhval <- ddply(tDAMT, .(MEDHVAL_b), summarize,  DAMT=mean(DAMT))
#Bucketing MEDINC to ten buckets
v <- c(seq(min(tDAMT$MEDINC), max(tDAMT$MEDINC), max(tDAMT$MEDINC)/9))
tDAMT$MEDINC_b = findInterval(tDAMT$MEDINC,v)
medincb <- ddply(tDAMT, .(MEDINC_b), summarize,  DAMT=mean(DAMT))
# Bucketing median education
v <- c(seq(min(tDAMT$MEDEDUC), max(tDAMT$MEDEDUC), max(tDAMT$MEDEDUC)/9))
tDAMT$MEDEDUC_b = findInterval(tDAMT$MEDEDUC,v)
mededuc_b <- ddply(tDAMT, .(MEDEDUC_b), summarize,  DAMT=mean(DAMT))
p <- ggplot(agemeans, aes(MEDAGE_b, DAMT)) + geom_col(aes(fill = MEDAGE_b))
l <- ggplot(tDAMT, aes(MEDPPH, DAMT)) + geom_point(aes(fill = MEDPPH))
n <- ggplot(medhval, aes(MEDHVAL_b, DAMT)) + geom_col(aes(fill = MEDHVAL_b))
m <- ggplot(medincb, aes(MEDINC_b, DAMT)) + geom_col(aes(fill = MEDINC_b))
o <- ggplot(mededuc_b, aes(MEDEDUC_b, DAMT)) + geom_col(aes(fill = MEDEDUC_b))
q <- ggplot(tDAMT, aes(MEDEDUC, DAMT)) + geom_point(aes(fill = MEDEDUC))
grid.arrange(p,l,n,m, nrow=2, ncol=2)
#Bucketing MEDAGE to 8 buckets
v <- c(seq(min(train$MEDAGE), max(train$MEDAGE), max(train$MEDAGE)/7))
train$MEDAGE_b = findInterval(train$MEDAGE,v)
agemeans <- ddply(train, .(MEDAGE_b), summarize,  DONR=mean(DONR))
#Bucketing MEDhval to 10 buckets
v <- c(seq(min(train$MEDHVAL), max(train$MEDHVAL), max(train$MEDHVAL)/10))
train$MEDHVAL_b = findInterval(train$MEDHVAL,v)
medhval <- ddply(train, .(MEDHVAL_b), summarize,  DONR=mean(DONR))
#Bucketing MEDINC to ten buckets
v <- c(seq(min(train$MEDINC), max(train$MEDINC), max(train$MEDINC)/9))
train$MEDINC_b = findInterval(train$MEDINC,v)
medincb <- ddply(train, .(MEDINC_b), summarize,  DONR=mean(DONR))
# Bucketing median education
v <- c(seq(min(train$MEDEDUC), max(train$MEDEDUC), max(train$MEDEDUC)/9))
train$MEDEDUC_b = findInterval(train$MEDEDUC,v)
mededuc_b <- ddply(train, .(MEDEDUC_b), summarize,  DONR=mean(DONR))
p <- ggplot(agemeans, aes(MEDAGE_b, DONR)) + geom_col(aes(fill = MEDAGE_b))
l <- ggplot(train, aes(MEDPPH, DONR)) + geom_point(aes(fill = MEDPPH))
n <- ggplot(medhval, aes(MEDHVAL_b, DONR)) + geom_col(aes(fill = MEDHVAL_b))
m <- ggplot(medincb, aes(MEDINC_b, DONR)) + geom_col(aes(fill = MEDINC_b))
o <- ggplot(mededuc_b, aes(MEDEDUC_b, DONR)) + geom_col(aes(fill = MEDEDUC_b))
q <- ggplot(train, aes(MEDEDUC, DONR)) + geom_point(aes(fill = MEDEDUC))
grid.arrange(p,l,n,m, nrow=2, ncol=2)
grid.arrange(o,q, nrow=1, ncol=2)
#Bucketing MEDAGE to 8 buckets
v <- c(seq(min(train$MEDAGE), max(train$MEDAGE), max(train$MEDAGE)/7))
train$MEDAGE_b = findInterval(train$MEDAGE,v)
agemeans <- ddply(train, .(MEDAGE_b), summarize,  DONR=mean(DONR))
#Bucketing MEDhval to 10 buckets
v <- c(seq(min(train$MEDHVAL), max(train$MEDHVAL), max(train$MEDHVAL)/10))
train$MEDHVAL_b = findInterval(train$MEDHVAL,v)
medhval <- ddply(train, .(MEDHVAL_b), summarize,  DONR=mean(DONR))
#Bucketing MEDINC to ten buckets
v <- c(seq(min(train$MEDINC), max(train$MEDINC), max(train$MEDINC)/9))
train$MEDINC_b = findInterval(train$MEDINC,v)
medincb <- ddply(train, .(MEDINC_b), summarize,  DONR=mean(DONR))
# Bucketing median education
v <- c(seq(min(train$MEDEDUC), max(train$MEDEDUC), max(train$MEDEDUC)/9))
train$MEDEDUC_b = findInterval(train$MEDEDUC,v)
mededuc_b <- ddply(train, .(MEDEDUC_b), summarize,  DONR=mean(DONR))
p <- ggplot(agemeans, aes(MEDAGE_b, DONR)) + geom_col(aes(fill = MEDAGE_b))
n <- ggplot(medhval, aes(MEDHVAL_b, DONR)) + geom_col(aes(fill = MEDHVAL_b))
m <- ggplot(medincb, aes(MEDINC_b, DONR)) + geom_col(aes(fill = MEDINC_b))
o <- ggplot(mededuc_b, aes(MEDEDUC_b, DONR)) + geom_col(aes(fill = MEDEDUC_b))
grid.arrange(p,n,m,o, nrow=2, ncol=2)
#Bucketing MEDAGE to 8 buckets
v <- c(seq(min(train$MEDAGE), max(train$MEDAGE), max(train$MEDAGE)/7))
train$MEDAGE_b = findInterval(train$MEDAGE,v)
agemeans <- ddply(train, .(MEDAGE_b), summarize,  DONR=mean(DONR))
#Bucketing MEDhval to 10 buckets
v <- c(seq(min(train$MEDHVAL), max(train$MEDHVAL), max(train$MEDHVAL)/10))
train$MEDHVAL_b = findInterval(train$MEDHVAL,v)
medhval <- ddply(train, .(MEDHVAL_b), summarize,  DONR=mean(DONR))
#Bucketing MEDINC to ten buckets
v <- c(seq(min(train$MEDINC), max(train$MEDINC), max(train$MEDINC)/9))
train$MEDINC_b = findInterval(train$MEDINC,v)
medincb <- ddply(train, .(MEDINC_b), summarize,  DONR=mean(DONR))
# Bucketing median education
v <- c(seq(min(train$MEDEDUC), max(train$MEDEDUC), max(train$MEDEDUC)/9))
train$MEDEDUC_b = findInterval(train$MEDEDUC,v)
mededuc_b <- ddply(train, .(MEDEDUC_b), summarize,  DONR=mean(DONR))
p <- ggplot(agemeans, aes(MEDAGE_b, DONR)) + geom_col(aes(fill = MEDAGE_b))+geom_hline(yintercept = mean(train$DONR))
n <- ggplot(medhval, aes(MEDHVAL_b, DONR)) + geom_col(aes(fill = MEDHVAL_b))+geom_hline(yintercept = mean(train$DONR))
m <- ggplot(medincb, aes(MEDINC_b, DONR)) + geom_col(aes(fill = MEDINC_b))+geom_hline(yintercept = mean(train$DONR))
o <- ggplot(mededuc_b, aes(MEDEDUC_b, DONR)) + geom_col(aes(fill = MEDEDUC_b))+geom_hline(yintercept = mean(train$DONR))
grid.arrange(p,n,m,o, nrow=2, ncol=2)
v <- c(seq(min(train$MEDPPH), max(train$MEDPPH), max(train$MEDPPH)/5))
train$MEDPPH_b = findInterval(train$MEDPPH,v)
medpph_b <- ddply(train, .(MEDPPH_b), summarize,  DONR=mean(DONR))
r <- ggplot(medpph_b, aes(MEDPPH_b, DONR)) + geom_col(aes(fill = MEDPPH_b))+geom_hline(yintercept = mean(train$DONR))
r
#Bucketing MEDAGE to 8 buckets
v <- c(seq(min(train$MEDAGE), max(train$MEDAGE), max(train$MEDAGE)/7))
train$MEDAGE_b = findInterval(train$MEDAGE,v)
agemeans <- ddply(train, .(MEDAGE_b), summarize,  DONR=mean(DONR))
#Bucketing MEDhval to 10 buckets
v <- c(seq(min(train$MEDHVAL), max(train$MEDHVAL), max(train$MEDHVAL)/10))
train$MEDHVAL_b = findInterval(train$MEDHVAL,v)
medhval <- ddply(train, .(MEDHVAL_b), summarize,  DONR=mean(DONR))
#Bucketing MEDINC to ten buckets
v <- c(seq(min(train$MEDINC), max(train$MEDINC), max(train$MEDINC)/9))
train$MEDINC_b = findInterval(train$MEDINC,v)
medincb <- ddply(train, .(MEDINC_b), summarize,  DONR=mean(DONR))
# Bucketing Persons Per Household
v <- c(seq(min(train$MEDPPH), max(train$MEDPPH), max(train$MEDPPH)/5))
train$MEDPPH_b = findInterval(train$MEDPPH,v)
medpph_b <- ddply(train, .(MEDPPH_b), summarize,  DONR=mean(DONR))
# Bucketing median education
v <- c(seq(min(train$MEDEDUC), max(train$MEDEDUC), max(train$MEDEDUC)/9))
train$MEDEDUC_b = findInterval(train$MEDEDUC,v)
mededuc_b <- ddply(train, .(MEDEDUC_b), summarize,  DONR=mean(DONR))
p <- ggplot(agemeans, aes(MEDAGE_b, DONR)) + geom_col(aes(fill = MEDAGE_b))+geom_hline(yintercept = mean(train$DONR))
n <- ggplot(medhval, aes(MEDHVAL_b, DONR)) + geom_col(aes(fill = MEDHVAL_b))+geom_hline(yintercept = mean(train$DONR))
m <- ggplot(medincb, aes(MEDINC_b, DONR)) + geom_col(aes(fill = MEDINC_b))+geom_hline(yintercept = mean(train$DONR))
o <- ggplot(mededuc_b, aes(MEDEDUC_b, DONR)) + geom_col(aes(fill = MEDEDUC_b))+geom_hline(yintercept = mean(train$DONR))
r <- ggplot(medpph_b, aes(MEDPPH_b, DONR)) + geom_col(aes(fill = MEDPPH_b))+geom_hline(yintercept = mean(train$DONR))
grid.arrange(p,n,m, nrow=2, ncol=2)
grid.arrange(o,r, nrow=1, ncol=2)
v <- c(seq(min(train$NUMPROM), max(train$NUMPROM), max(train$NUMPROM)/10))
train$NUMPROM_b = findInterval(train$NUMPROM,v)
NUMPROM_b <- ddply(train, .(NUMPROM_b), summarize,  DAMT=mean(DAMT))
v <- c(seq(min(train$NUMPRM12), max(train$NUMPRM12), max(train$NUMPRM12)/10))
train$NUMPRM12_b = findInterval(train$NUMPRM12,v)
NUMPRM12_b <- ddply(train, .(NUMPRM12_b), summarize,  DAMT=mean(DAMT))
l <- ggplot(train, aes(NUMPROM, DAMT)) + geom_col()
m <- ggplot(NUMPROM_b, aes(NUMPROM_b, DAMT)) + geom_col()
n <- ggplot(train, aes(NUMPRM12, DAMT)) + geom_col()
o <- ggplot(NUMPRM12_b, aes(NUMPRM12_b, DAMT)) + geom_col()
grid.arrange(l,m, nrow=1, ncol=2)
grid.arrange(n,o, nrow=1, ncol=2)
v <- c(seq(min(train$NUMPROM), max(train$NUMPROM), max(train$NUMPROM)/10))
train$NUMPROM_b = findInterval(train$NUMPROM,v)
NUMPROM_b <- ddply(train, .(NUMPROM_b), summarize,  DAMT=mean(DAMT))
v <- c(seq(min(train$NUMPRM12), max(train$NUMPRM12), max(train$NUMPRM12)/10))
train$NUMPRM12_b = findInterval(train$NUMPRM12,v)
NUMPRM12_b <- ddply(train, .(NUMPRM12_b), summarize,  DAMT=mean(DAMT))
l <- ggplot(train, aes(NUMPROM, DAMT)) + geom_col()
m <- ggplot(NUMPROM_b, aes(NUMPROM_b, DAMT)) + geom_col()
n <- ggplot(train, aes(NUMPRM12, DAMT)) + geom_col() + +geom_hline(yintercept = mean(train$DONR))
v <- c(seq(min(train$NUMPROM), max(train$NUMPROM), max(train$NUMPROM)/10))
train$NUMPROM_b = findInterval(train$NUMPROM,v)
NUMPROM_b <- ddply(train, .(NUMPROM_b), summarize,  DAMT=mean(DAMT))
v <- c(seq(min(train$NUMPRM12), max(train$NUMPRM12), max(train$NUMPRM12)/10))
train$NUMPRM12_b = findInterval(train$NUMPRM12,v)
NUMPRM12_b <- ddply(train, .(NUMPRM12_b), summarize,  DAMT=mean(DAMT))
l <- ggplot(train, aes(NUMPROM, DAMT)) + geom_col()
m <- ggplot(NUMPROM_b, aes(NUMPROM_b, DAMT)) + geom_col()
n <- ggplot(train, aes(NUMPRM12, DAMT)) + geom_col() + geom_hline(yintercept = mean(train$DONR))
o <- ggplot(NUMPRM12_b, aes(NUMPRM12_b, DAMT)) + geom_col() + geom_hline(yintercept = mean(train$DONR))
grid.arrange(l,m, nrow=1, ncol=2)
grid.arrange(n,o, nrow=1, ncol=2)
v <- c(seq(min(train$NUMPROM), max(train$NUMPROM), max(train$NUMPROM)/10))
train$NUMPROM_b = findInterval(train$NUMPROM,v)
NUMPROM_b <- ddply(train, .(NUMPROM_b), summarize,  DONR=mean(DONR))
v <- c(seq(min(train$NUMPRM12), max(train$NUMPRM12), max(train$NUMPRM12)/10))
train$NUMPRM12_b = findInterval(train$NUMPRM12,v)
NUMPRM12_b <- ddply(train, .(NUMPRM12_b), summarize,  DONR=mean(DONR))
l <- ggplot(train, aes(NUMPROM, DONR)) + geom_col()
m <- ggplot(NUMPROM_b, aes(NUMPROM_b, DONR)) + geom_col()
n <- ggplot(train, aes(NUMPRM12, DONR)) + geom_col() + geom_hline(yintercept = mean(train$DONR))
o <- ggplot(NUMPRM12_b, aes(NUMPRM12_b, DONR)) + geom_col() + geom_hline(yintercept = mean(train$DONR))
grid.arrange(l,m, nrow=1, ncol=2)
grid.arrange(n,o, nrow=1, ncol=2)
v <- c(seq(min(train$NUMPROM), max(train$NUMPROM), max(train$NUMPROM)/10))
train$NUMPROM_b = findInterval(train$NUMPROM,v)
NUMPROM_b <- ddply(train, .(NUMPROM_b), summarize,  DONR=mean(DONR))
v <- c(seq(min(train$NUMPRM12), max(train$NUMPRM12), max(train$NUMPRM12)/10))
train$NUMPRM12_b = findInterval(train$NUMPRM12,v)
NUMPRM12_b <- ddply(train, .(NUMPRM12_b), summarize,  DONR=mean(DONR))
l <- ggplot(train, aes(NUMPROM, DONR)) + geom_col()
m <- ggplot(NUMPROM_b, aes(NUMPROM_b, DONR)) + geom_col()+ geom_hline(yintercept = mean(train$DONR))
n <- ggplot(train, aes(NUMPRM12, DONR)) + geom_col()
o <- ggplot(NUMPRM12_b, aes(NUMPRM12_b, DONR)) + geom_col() + geom_hline(yintercept = mean(train$DONR))
grid.arrange(l,m, nrow=1, ncol=2)
grid.arrange(n,o, nrow=1, ncol=2)
v <- c(seq(min(train$NUMPROM), max(train$NUMPROM), max(train$NUMPROM)/10))
train$NUMPROM_b = findInterval(train$NUMPROM,v)
NUMPROM_b <- ddply(train, .(NUMPROM_b), summarize,  DONR=mean(DONR))
v <- c(seq(min(train$NUMPRM12), max(train$NUMPRM12), max(train$NUMPRM12)/10))
train$NUMPRM12_b = findInterval(train$NUMPRM12,v)
NUMPRM12_b <- ddply(train, .(NUMPRM12_b), summarize,  DONR=mean(DONR))
l <- ggplot(train, aes(NUMPROM, DONR)) + geom_col()
m <- ggplot(NUMPROM_b, aes(NUMPROM_b, DONR)) + geom_col()+ geom_hline(yintercept = mean(train$DONR))
n <- ggplot(train, aes(NUMPRM12, DONR)) + geom_col()
o <- ggplot(NUMPRM12_b, aes(NUMPRM12_b, DONR)) + geom_col() + geom_hline(yintercept = mean(train$DONR))
grid.arrange(l,m, nrow=1, ncol=2)
grid.arrange(n,o, nrow=1, ncol=2)
# Number of gifts buckets
v <- c(seq(min(train$NGIFTALL), max(train$NGIFTALL), max(train$NGIFTALL)/20))
train$NGIFTALL_b = findInterval(train$NGIFTALL,v)
NGIFTALL_b <- ddply(train, .(NGIFTALL_b), summarize,  DONR=mean(DONR))
# Dollar amount of lifetime gifts
v <- c(seq(min(train$RAMNTALL), max(train$RAMNTALL), max(train$RAMNTALL)/10))
train$RAMNTALL_b = findInterval(train$RAMNTALL,v)
RAMNTALL_b <- ddply(train, .(RAMNTALL_b), summarize,  DONR=mean(DONR))
n <- ggplot(train, aes(RAMNTALL, DONR)) + geom_point()
k <- ggplot(RAMNTALL_b, aes(RAMNTALL_b, DONR)) + geom_col()
l <- ggplot(train, aes(NGIFTALL, DONR)) + geom_col()
m <- ggplot(NGIFTALL_b, aes(NGIFTALL_b, DONR)) + geom_col()
o <- ggplot(train, aes(MAXRAMNT, DONR)) + geom_point()
p <-ggplot(train, aes(LASTGIFT, DONR)) + geom_point()
TDON <- ddply(train, .(TDON), summarize,  DONR=mean(DONR))
q <-ggplot(TDON, aes(TDON, DONR)) + geom_col()
grid.arrange(n,k,l,m, nrow=2, ncol=2)
grid.arrange(o,p,q, nrow=2, ncol=2)
# Number of gifts buckets
v <- c(seq(min(train$NGIFTALL), max(train$NGIFTALL), max(train$NGIFTALL)/20))
train$NGIFTALL_b = findInterval(train$NGIFTALL,v)
NGIFTALL_b <- ddply(train, .(NGIFTALL_b), summarize,  DONR=mean(DONR))
# Dollar amount of lifetime gifts
v <- c(seq(min(train$RAMNTALL), max(train$RAMNTALL), max(train$RAMNTALL)/10))
train$RAMNTALL_b = findInterval(train$RAMNTALL,v)
RAMNTALL_b <- ddply(train, .(RAMNTALL_b), summarize,  DONR=mean(DONR))
k <- ggplot(RAMNTALL_b, aes(RAMNTALL_b, DONR)) + geom_col()
m <- ggplot(NGIFTALL_b, aes(NGIFTALL_b, DONR)) + geom_col()
o <- ggplot(train, aes(MAXRAMNT, DONR)) + geom_point()
p <-ggplot(train, aes(LASTGIFT, DONR)) + geom_point()
TDON <- ddply(train, .(TDON), summarize,  DONR=mean(DONR))
q <-ggplot(TDON, aes(TDON, DONR)) + geom_col()
grid.arrange(k,m,o,p, nrow=2, ncol=2)
grid.arrange(q, nrow=2, ncol=2)
o <- ggplot(train, aes(MAXRAMNT_b, DONR)) + geom_col()
o
v <- c(seq(min(train$MAXRAMNT), max(train$MAXRAMNT), max(train$MAXRAMNT)/10))
train$MAXRAMNT_b = findInterval(train$MAXRAMNT,v)
MAXRAMNT_b <- ddply(train, .(MAXRAMNT_b), summarize,  DONR=mean(DONR))
o <- ggplot(train, aes(MAXRAMNT_b, DONR)) + geom_col()
o
o <- ggplot(MAXRAMNT_b, aes(MAXRAMNT_b, DONR)) + geom_col()
o
v <- c(seq(min(train$LASTGIFT), max(train$LASTGIFT), max(train$LASTGIFT)/10))
train$LASTGIFT_b = findInterval(train$LASTGIFT,v)
LASTGIFT_b <- ddply(train, .(LASTGIFT_b), summarize,  DONR=mean(DONR))
p <-ggplot(LASTGIFT_b, aes(LASTGIFT, DONR)) + geom_point()+ geom_hline(yintercept = mean(train$DONR))
p
p <-ggplot(LASTGIFT_b, aes(LASTGIFT_b, DONR)) + geom_point()+ geom_hline(yintercept = mean(train$DONR))
p
# Number of gifts buckets
v <- c(seq(min(train$NGIFTALL), max(train$NGIFTALL), max(train$NGIFTALL)/20))
train$NGIFTALL_b = findInterval(train$NGIFTALL,v)
NGIFTALL_b <- ddply(train, .(NGIFTALL_b), summarize,  DONR=mean(DONR))
# Dollar amount of lifetime gifts
v <- c(seq(min(train$RAMNTALL), max(train$RAMNTALL), max(train$RAMNTALL)/10))
train$RAMNTALL_b = findInterval(train$RAMNTALL,v)
RAMNTALL_b <- ddply(train, .(RAMNTALL_b), summarize,  DONR=mean(DONR))
# Dollar amount max gift
v <- c(seq(min(train$MAXRAMNT), max(train$MAXRAMNT), max(train$MAXRAMNT)/10))
train$MAXRAMNT_b = findInterval(train$MAXRAMNT,v)
MAXRAMNT_b <- ddply(train, .(MAXRAMNT_b), summarize,  DONR=mean(DONR))
# Dollar amount last gift
v <- c(seq(min(train$LASTGIFT), max(train$LASTGIFT), max(train$LASTGIFT)/10))
train$LASTGIFT_b = findInterval(train$LASTGIFT,v)
LASTGIFT_b <- ddply(train, .(LASTGIFT_b), summarize,  DONR=mean(DONR))
k <- ggplot(RAMNTALL_b, aes(RAMNTALL_b, DONR)) + geom_col()+geom_hline(yintercept = mean(train$DONR))
m <- ggplot(NGIFTALL_b, aes(NGIFTALL_b, DONR)) + geom_col()+ geom_hline(yintercept = mean(train$DONR))
o <- ggplot(MAXRAMNT_b, aes(MAXRAMNT_b, DONR)) + geom_col()+ geom_hline(yintercept = mean(train$DONR))
p <-ggplot(LASTGIFT_b, aes(LASTGIFT_b, DONR)) + geom_col()+ geom_hline(yintercept = mean(train$DONR))
TDON <- ddply(train, .(TDON), summarize,  DONR=mean(DONR))
q <-ggplot(TDON, aes(TDON, DONR)) + geom_col()+ geom_hline(yintercept = mean(train$DONR))
grid.arrange(k,m,o,p, nrow=2, ncol=2)
grid.arrange(q, nrow=2, ncol=2)
Recency <- ddply(train, .(Recency), summarize,  DONR=mean(DONR))
tDAMT$Recency <- as.factor(substring(tDAMT$RFA_96, 1, 1)) #Index and n chars
train$Recency <- as.factor(substring(train$RFA_96, 1, 1))
tDAMT$Freq <- as.factor(substring(tDAMT$RFA_96, 2, 2)) #Index and n chars
train$Freq <- as.factor(substring(train$RFA_96, 2, 2))
tDAMT$Amtcode <- as.factor(substring(tDAMT$RFA_96, 3, 3)) #Index and n chars
train$Amtcode <- as.factor(substring(train$RFA_96, 3, 3))
Recency <- ddply(train, .(Recency), summarize,  DONR=mean(DONR))
Recency <- ddply(train, .(Recency), summarize,  DONR=mean(DONR))
q <-ggplot(Recency, aes(Recency, DONR)) + geom_col(aes(fill=Recency)) + geom_hline(yintercept = mean(train$DONR))
Freq <- ddply(train, .(Freq), summarize,  DONR=mean(DONR))
r <-ggplot(Freq, aes(Freq, DONR)) + geom_col(aes(fill=Freq)) + geom_hline(yintercept = mean(train$DONR))
Amtcode <- ddply(train, .(Amtcode), summarize,  DONR=mean(DONR))
target <- c("B", "C", "D","E","F","G")
Amtcode <- Amtcode[match(target, Amtcode$Amtcode),]
m <-ggplot(Amtcode, aes(Amtcode, DONR)) + geom_col(aes(fill=Amtcode)) +        geom_hline(yintercept = mean(train$DONR))
grid.arrange(q,r,m, nrow=2, ncol=2)
pcadata <- train[,c(3:4,8:19)]
pcadata <- train[,c(3:4,8:19)]
pca = prcomp(pcadata, scale=TRUE)
pca
biplot(pca, scale = 0, cex = .6)
pcadata <- train[,c(3:4,8:19)]
pca = prcomp(pcadata, scale=TRUE)
biplot(pca, scale = 0, cex = .6)
pcadata <- train[,c(3:4,8:19)]
pca = prcomp(pcadata, scale=TRUE)
#biplot(pca, scale = 0, cex = .6)
pcadata <- train[,c(3:4,8:19)]
pca = prcomp(pcadata, scale=TRUE)
biplot(pca, scale = 0, cex = .6)
pcadata <- train[,c(3:4,8:19)]
train <- read.csv('trainSample.csv', stringsAsFactors = TRUE, na.strings=c("NA"," "))
na_count <-sapply(train, function(y) sum(is.na(y)))
na_count <- data.frame(na_count)
train$HOME = as.factor(train$HOME)
train$HINC = as.factor(train$HINC)
summary(train)
sapply(train, class)
na_count
pcadata <- train[,c(3:4,8:19)]
pca = prcomp(pcadata, scale=TRUE)
pcadata <- train[,c(3:4,8:19)]
pca = prcomp(pcadata, scale=TRUE)
# Make a scree plot by hand;
scree.values <- pca.eigen$values/sum(pca.eigen$values)
pr.var=pca$sdev ^2
pve=pr.var/sum(pr.var)
plot(pve, xlab="Principal Component", ylab="Proportion of Variance Explained ", ylim=c(0,1),type=’b’)
plot(pve, xlab="Principal Component", ylab="Proportion of Variance Explained ", ylim=c(0,1),type='b')
pcadata <- train[,c(3:4,8:19)]
pca = prcomp(pcadata, scale=TRUE)
pr.var=pca$sdev ^2
pve=pr.var/sum(pr.var)
plot(pve, xlab="Principal Component", ylab="Proportion of Variance Explained ", ylim=c(0,1),type='b')
plot(cumsum(pve), xlab="Principal Component ", ylab=" Cumulative Proportion of Variance Explained ", ylim=c(0,1), type='b’)
plot(cumsum(pve), xlab="Principal Component ", ylab=" Cumulative Proportion of Variance Explained ", ylim=c(0,1), type='b')
pcadata <- train[,c(3:4,8:19)]
pca = prcomp(pcadata, scale=TRUE)
pr.var=pca$sdev ^2
pve=pr.var/sum(pr.var)
plot(pve, xlab="Principal Component", ylab="Proportion of Variance Explained ", ylim=c(0,1),type='b')
plot(cumsum(pve), xlab="Principal Component ", ylab=" Cumulative Proportion of Variance Explained ", ylim=c(0,1), type='b')
pcadata <- train[,c(3:4,8:19)]
pca = prcomp(pcadata, scale=TRUE)
pr.var=pca$sdev ^2
pve=pr.var/sum(pr.var)
par(mfrow=c(1,2))
plot(pve, xlab="Principal Component", ylab="Proportion of Variance Explained ", ylim=c(0,1),type='b', col = "Blue")
plot(cumsum(pve), xlab="Principal Component ", ylab=" Cumulative Proportion of Variance Explained ", ylim=c(0,1), type='b', col = "Red")
biplot(pca, scale=0)
View(train)
biplot(pca, scale=0, xlabs=rep("·", nrow(train)))
pcadata <- train[,c(3:4,8:19)]
pca = prcomp(pcadata, scale=TRUE)
pr.var=pca$sdev ^2
pve=pr.var/sum(pr.var)
par(mfrow=c(1,2))
plot(pve, xlab="Principal Component", ylab="Proportion of Variance Explained ", ylim=c(0,1),type='b', col = "Blue")
plot(cumsum(pve), xlab="Principal Component ", ylab=" Cumulative Proportion of Variance Explained ", ylim=c(0,1), type='b', col = "Red")
